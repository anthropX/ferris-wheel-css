$side: 100px;
$radius: 186.6px;
$rotation: 1770deg;

$saturation: 75;
$hueOffset: -75;
$lightnessStep: 2.5;

$h1: $hueOffset + 0;
$h2: $hueOffset + 30;
$h3: $hueOffset + 60;
$h4: $hueOffset + 90;
$h5: $hueOffset + 120;
$h6: $hueOffset + 150;
$h7: $hueOffset + 180;
$h8: $hueOffset + 210;
$h9: $hueOffset + 240;
$h10: $hueOffset + 270;
$h11: $hueOffset + 300;
$h12: $hueOffset + 330;

$l1: 50 - $lightnessStep * 3;
$l2: 50 - $lightnessStep * 2;
$l3: 50 - $lightnessStep * 1;
$l4: 50 + $lightnessStep * 1;
$l5: 50 + $lightnessStep * 2;
$l6: 50 + $lightnessStep * 3;

* {
  box-sizing: border-box;
}

body {
  background: black;

  .scene {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    flex-wrap: wrap;
    perspective: 1000px;
    display: flex;
    justify-content: space-around;
    align-items: center;
    align-content: space-around;

    background: black;
    justify-items: center;

    .cube {
      transform-style: preserve-3d;
      animation-name: cubeSpin;
      animation-duration: 199s;
      animation-fill-mode: forwards;
      animation-timing-function: ease;
      animation-iteration-count: infinite;
      margin: 0 auto;
      width: 1 * $side;
      height: 1 * $side;
      transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);

      .side {
        position: absolute;
        width: 1 * $side;
        height: 1 * $side;

        &:nth-of-type(1) {
          transform: rotateX(0deg) translateZ($radius);
          background: hsl($h1, $saturation, $l1);
        }
        &:nth-of-type(2) {
          transform: rotateX(30deg) translateZ($radius);
          background: hsl($h2, $saturation, $l2);
        }
        &:nth-of-type(3) {
          transform: rotateX(60deg) translateZ($radius);
          background: hsl($h3, $saturation, $l3);
        }
        &:nth-of-type(4) {
          transform: rotateX(90deg) translateZ($radius);
          background: hsl($h4, $saturation, $l4);
        }
        &:nth-of-type(5) {
          transform: rotateX(120deg) translateZ($radius);
          background: hsl($h5, $saturation, $l5);
        }
        &:nth-of-type(6) {
          transform: rotateX(150deg) translateZ($radius);
          background: hsl($h6, $saturation, $l6);
        }
        &:nth-of-type(7) {
          transform: rotateX(180deg) translateZ($radius);
          background: hsl($h7, $saturation, $l1);
        }
        &:nth-of-type(8) {
          transform: rotateX(210deg) translateZ($radius);
          background: hsl($h8, $saturation, $l2);
        }
        &:nth-of-type(9) {
          transform: rotateX(240deg) translateZ($radius);
          background: hsl($h9, $saturation, $l3);
        }
        &:nth-of-type(10) {
          transform: rotateX(270deg) translateZ($radius);
          background: hsl($h10, $saturation, $l4);
        }
        &:nth-of-type(11) {
          transform: rotateX(300deg) translateZ($radius);
          background: hsl($h11, $saturation, $l5);
        }
        &:nth-of-type(12) {
          transform: rotateX(330deg) translateZ($radius);
          background: hsl($h12, $saturation, $l6);
        }
      }
    }

    @keyframes cubeSpin {
      0% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
      }
      17% {
        transform: rotateX($rotation) rotateY(0deg) rotateZ(0deg);
      }
      33% {
        transform: rotateX($rotation) rotateY($rotation) rotateZ(0deg);
      }
      50% {
        transform: rotateX($rotation) rotateY($rotation) rotateZ($rotation);
      }
      67% {
        transform: rotateX(0deg) rotateY($rotation) rotateZ($rotation);
      }
      83% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ($rotation);
      }
      100% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
      }
    }
  }
}
